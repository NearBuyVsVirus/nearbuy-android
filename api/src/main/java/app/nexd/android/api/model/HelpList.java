/*
 * Nexd API
 * Swagger API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package app.nexd.android.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * HelpList
 */

public class HelpList {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_HELP_REQUESTS_IDS = "helpRequestsIds";
  @SerializedName(SERIALIZED_NAME_HELP_REQUESTS_IDS)
  private List<Long> helpRequestsIds = new ArrayList<Long>();

  public static final String SERIALIZED_NAME_OWNER_ID = "ownerId";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  private String ownerId;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private User owner;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Date createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private Date updatedAt;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    CANCELED("canceled"),
    
    COMPLETED("completed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status = StatusEnum.ACTIVE;

  public static final String SERIALIZED_NAME_HELP_REQUESTS = "helpRequests";
  @SerializedName(SERIALIZED_NAME_HELP_REQUESTS)
  private List<HelpRequest> helpRequests = new ArrayList<HelpRequest>();


  public HelpList id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public HelpList helpRequestsIds(List<Long> helpRequestsIds) {
    
    this.helpRequestsIds = helpRequestsIds;
    return this;
  }

  public HelpList addHelpRequestsIdsItem(Long helpRequestsIdsItem) {
    this.helpRequestsIds.add(helpRequestsIdsItem);
    return this;
  }

   /**
   * List of help request IDs
   * @return helpRequestsIds
  **/
  @ApiModelProperty(required = true, value = "List of help request IDs")

  public List<Long> getHelpRequestsIds() {
    return helpRequestsIds;
  }


  public void setHelpRequestsIds(List<Long> helpRequestsIds) {
    this.helpRequestsIds = helpRequestsIds;
  }


  public HelpList ownerId(String ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOwnerId() {
    return ownerId;
  }


  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public HelpList owner(User owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public User getOwner() {
    return owner;
  }


  public void setOwner(User owner) {
    this.owner = owner;
  }


  public HelpList createdAt(Date createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public Date getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }


  public HelpList updatedAt(Date updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "")

  public Date getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  public HelpList status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public HelpList helpRequests(List<HelpRequest> helpRequests) {
    
    this.helpRequests = helpRequests;
    return this;
  }

  public HelpList addHelpRequestsItem(HelpRequest helpRequestsItem) {
    this.helpRequests.add(helpRequestsItem);
    return this;
  }

   /**
   * Get helpRequests
   * @return helpRequests
  **/
  @ApiModelProperty(required = true, value = "")

  public List<HelpRequest> getHelpRequests() {
    return helpRequests;
  }


  public void setHelpRequests(List<HelpRequest> helpRequests) {
    this.helpRequests = helpRequests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HelpList helpList = (HelpList) o;
    return Objects.equals(this.id, helpList.id) &&
        Objects.equals(this.helpRequestsIds, helpList.helpRequestsIds) &&
        Objects.equals(this.ownerId, helpList.ownerId) &&
        Objects.equals(this.owner, helpList.owner) &&
        Objects.equals(this.createdAt, helpList.createdAt) &&
        Objects.equals(this.updatedAt, helpList.updatedAt) &&
        Objects.equals(this.status, helpList.status) &&
        Objects.equals(this.helpRequests, helpList.helpRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, helpRequestsIds, ownerId, owner, createdAt, updatedAt, status, helpRequests);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HelpList {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    helpRequestsIds: ").append(toIndentedString(helpRequestsIds)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    helpRequests: ").append(toIndentedString(helpRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

